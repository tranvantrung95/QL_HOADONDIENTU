<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBox3.Text" xml:space="preserve">
    <value>Bản quyền: Bản quyền thuộc về Trần Văn Trung. Mọi quyền được bảo lưu.
Chính sách bảo mật: UltraViewer cam kết bảo vệ thông tin cá nhân của người dùng theo chính sách bảo mật được công bố trên trang web.
Điều khoản sử dụng: Người dùng cần tuân thủ các điều khoản sử dụng được nêu trên trang web khi sử dụng phần mềm.</value>
  </data>
  <data name="richTextBox2.Text" xml:space="preserve">
    <value>1. Tên phần mềm: UltraViewer Remote Support Tool

2. Phiên bản: 1.0.0

3. Ngày phát hành: 15/05/2024

4. Mô tả ngắn:
UltraViewer là một công cụ hỗ trợ từ xa, cho phép người dùng kết nối và điều khiển máy tính từ xa một cách dễ dàng và an toàn. Phần mềm này đặc biệt hữu ích trong việc cung cấp hỗ trợ kỹ thuật và hợp tác từ xa.

5. Tính năng chính:
Kết nối từ xa: Kết nối và điều khiển máy tính từ xa một cách nhanh chóng và ổn định.
Chia sẻ màn hình: Xem và điều khiển màn hình của máy tính từ xa.
Trò chuyện trực tiếp: Tích hợp chức năng trò chuyện để liên lạc với người dùng từ xa.
Truyền tệp: Dễ dàng truyền tệp giữa các máy tính.
Bảo mật cao: Mã hóa dữ liệu truyền tải để đảm bảo an toàn thông tin.

6. Yêu cầu hệ thống:
Hệ điều hành: Windows 7/8/10/11
Bộ vi xử lý: Intel Core i3 hoặc cao hơn
RAM: 2 GB hoặc cao hơn
Dung lượng đĩa cứng: 200 MB trống hoặc nhiều hơn
Kết nối Internet: Kết nối Internet băng thông rộng

7. Hướng dẫn cài đặt:
Tải phần mềm từ trang web chính thức: www.ultraviewer.com
Mở tệp cài đặt và làm theo các hướng dẫn trên màn hình.
Sau khi cài đặt hoàn tất, mở UltraViewer và nhập ID và mật khẩu để kết nối.

8. Hỗ trợ và liên hệ:
Email hỗ trợ: support@example.com
Số điện thoại hỗ trợ: 0123 456 789
Diễn đàn hỗ trợ: forum.ultraviewer.com</value>
  </data>
</root>